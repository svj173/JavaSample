package security.des;


import tools.DumpTools;

import java.io.File;
import java.io.FileInputStream;

/**
 * Загрузить из файла хранилище ключей (в виде массива байт) и распечатать их в символьно-цифровом виде.
 * <BR/>
 * <BR/> User: svj
 * <BR/> Date: 24.10.2012 17:35
 */
public class LoadStoreAsBytes
{
    public static void main ( String[] args )
    {
        FileInputStream     fs;
        String			    str, storeFileName;
        File                file;
        long                size;
        byte[]              bb, bbStore;
        int                 ic;

        str             = null;
        storeFileName   = "/home/svj/projects/SVJ/JavaSample/test/security/ksdes.jks";
        System.out.println ( "storeFileName = '" + storeFileName + "'" );

        try
        {
            file = new File ( storeFileName );
            size = file.length();
            System.out.println ( "size = " + size );
            bb  = new byte[(int)size];

            fs		= new FileInputStream ( file );
            ic      = fs.read ( bb );
            System.out.println ( "ic = " + ic );

            fs.close ();

            str = DumpTools.listArray ( bb, ',' );

            // представление хранилища - 616 байт
            bbStore  = new byte[] { -50, -50, -50, -50, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 3, 107, 107, 107, 0, 0, 1, 58, -110, 69, 104, 8, -84, -19, 0, 5, 115, 114, 0, 51, 99, 111, 109, 46, 115, 117, 110, 46, 99, 114, 121, 112, 116, 111, 46, 112, 114, 111, 118, 105, 100, 101, 114, 46, 83, 101, 97, 108, 101, 100, 79, 98, 106, 101, 99, 116, 70, 111, 114, 75, 101, 121, 80, 114, 111, 116, 101, 99, 116, 111, 114, -51, 87, -54, 89, -25, 48, -69, 83, 2, 0, 0, 120, 114, 0, 25, 106, 97, 118, 97, 120, 46, 99, 114, 121, 112, 116, 111, 46, 83, 101, 97, 108, 101, 100, 79, 98, 106, 101, 99, 116, 62, 54, 61, -90, -61, -73, 84, 112, 2, 0, 4, 91, 0, 13, 101, 110, 99, 111, 100, 101, 100, 80, 97, 114, 97, 109, 115, 116, 0, 2, 91, 66, 91, 0, 16, 101, 110, 99, 114, 121, 112, 116, 101, 100, 67, 111, 110, 116, 101, 110, 116, 113, 0, 126, 0, 2, 76, 0, 9, 112, 97, 114, 97, 109, 115, 65, 108, 103, 116, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 0, 7, 115, 101, 97, 108, 65, 108, 103, 113, 0, 126, 0, 3, 120, 112, 117, 114, 0, 2, 91, 66, -84, -13, 23, -8, 6, 8, 84, -32, 2, 0, 0, 120, 112, 0, 0, 0, 15, 48, 13, 4, 8, -48, -123, -110, 119, 54, -95, 79, 32, 2, 1, 20, 117, 113, 0, 126, 0, 5, 0, 0, 1, 8, 82, 8, -116, 110, 26, 7, 111, -62, 33, -6, 15, -127, 117, 21, 64, -83, 9, -103, 123, 57, -128, -52, 117, -96, -91, -110, -66, 56, 12, 13, 6, 53, 108, -90, -25, 35, -49, 14, 61, 103, -57, -42, 74, 104, 40, -104, -62, 77, 89, 117, 125, -110, 91, -95, 39, 77, -26, -32, 6, -41, -68, -104, 67, 10, -83, -51, 114, -46, -14, -66, -29, 73, -44, 98, 39, 102, -107, -70, -108, -61, 13, 52, 64, -50, 86, -55, -89, 123, 31, -116, -91, 89, -117, -56, 76, 60, 126, 45, -17, 109, -10, -33, 66, -78, 10, -115, -46, -46, -12, -56, 33, -128, -77, -113, 4, -107, 90, -123, -1, 127, -124, 93, -62, 77, -67, 57, -15, -57, 26, 40, -112, 16, 92, 98, 99, 95, -122, -8, 55, -64, 23, -34, 91, -106, -64, 127, 72, -104, -46, -10, 62, 125, 113, 20, -39, 24, 43, -41, 49, -5, -50, -5, 109, -72, 31, 12, -41, -88, -40, -111, 64, -89, -89, -59, -96, 42, 85, -58, -69, -11, 123, 70, -67, -29, 19, -104, -34, -82, -44, 2, 57, 57, 63, -89, 42, -63, 103, -82, 5, 83, -114, 17, -9, -49, -49, 92, 77, -87, -16, -48, 51, 27, 39, 61, -15, 6, -105, 8, -7, 53, 56, -56, -28, -112, -111, 80, -59, 126, 50, -82, -50, -57, -75, -81, -82, 32, -78, 8, 51, -84, 0, -56, -124, -66, 34, -49, -15, -123, -36, -45, -55, -58, 98, -7, -118, 25, -14, 33, 44, -10, -108, 42, 66, 52, 116, 0, 22, 80, 66, 69, 87, 105, 116, 104, 77, 68, 53, 65, 110, 100, 84, 114, 105, 112, 108, 101, 68, 69, 83, 116, 0, 22, 80, 66, 69, 87, 105, 116, 104, 77, 68, 53, 65, 110, 100, 84, 114, 105, 112, 108, 101, 68, 69, 83, 68, -127, -37, 80, 55, 69, 86, 88, -79, -104, -92, 15, 92, -19, -45, 56, 114, -19, -11, -35 };

        } catch ( Exception e )      {
            e.printStackTrace();
        }
        System.out.println ( "result = \n" + str );

    }
}
